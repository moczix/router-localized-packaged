{"version":3,"file":"localize-router.js","sources":["ng://localize-router/lib/localize-router.config.ts","ng://localize-router/lib/localize-router.parser.ts","ng://localize-router/lib/localize-router.service.ts","ng://localize-router/lib/util.ts","ng://localize-router/lib/localize-router.pipe.ts","ng://localize-router/lib/localize-router-config-loader.ts","ng://localize-router/lib/localize-router.module.ts"],"sourcesContent":["import { Inject, InjectionToken, Provider, Injectable } from '@angular/core';\nimport { Routes } from '@angular/router';\nimport { LocalizeRouterModule } from './localize-router.module';\n\n\nexport const LOCALIZE_ROUTER_FORROOT_GUARD = new InjectionToken<LocalizeRouterModule>('LOCALIZE_ROUTER_FORROOT_GUARD');\n\n\nexport const RAW_ROUTES: InjectionToken<Routes[]> = new InjectionToken<Routes[]>('RAW_ROUTES');\n\n/**\n * Type for Caching of default language\n */\n\n export enum CacheMechanismEnum {\n  LocalStorage = 'LocalStorage',\n  Cookie = 'Cookie'\n }\n\n\nexport type CacheMechanism = 'LocalStorage' | 'Cookie';\n\n/**\n * Namespace for fail proof access of CacheMechanism\n */\n\n\nexport const USE_CACHED_LANG = new InjectionToken<boolean>('USE_CACHED_LANG');\n\nexport const CACHE_MECHANISM = new InjectionToken<CacheMechanism>('CACHE_MECHANISM');\n\nexport const CACHE_NAME = new InjectionToken<string>('CACHE_NAME');\n\n\nexport type DefaultLanguageFunction = (languages: string[], cachedLang?: string, browserLang?: string) => string;\n\n\nexport const DEFAULT_LANG_FUNCTION = new InjectionToken<DefaultLanguageFunction>('DEFAULT_LANG_FUNCTION');\n\n\nexport const ALWAYS_SET_PREFIX = new InjectionToken<boolean>('ALWAYS_SET_PREFIX');\n\n/**\n * Config interface for LocalizeRouter\n */\nexport interface LocalizeRouterConfig {\n  parser?: Provider;\n  useCachedLang?: boolean;\n  cacheMechanism?: CacheMechanism;\n  cacheName?: string;\n  defaultLangFunction?: DefaultLanguageFunction;\n  alwaysSetPrefix?: boolean;\n}\n\nconst LOCALIZE_CACHE_NAME = 'LOCALIZE_DEFAULT_LANGUAGE';\n\n@Injectable()\nexport class LocalizeRouterSettings implements LocalizeRouterConfig {\n\n  constructor(\n    @Inject(USE_CACHED_LANG) public useCachedLang: boolean = true,\n    @Inject(ALWAYS_SET_PREFIX) public alwaysSetPrefix: boolean = true,\n    @Inject(CACHE_MECHANISM) public cacheMechanism: any = CacheMechanismEnum.LocalStorage,\n    @Inject(CACHE_NAME) public cacheName: string = LOCALIZE_CACHE_NAME,\n    @Inject(DEFAULT_LANG_FUNCTION) public defaultLangFunction: any = void 0\n  ) {\n  }\n}\n","import { Routes, Route } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { Location } from '@angular/common';\nimport { LocalizeRouterSettings, CacheMechanismEnum } from './localize-router.config';\nimport { Inject } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\nconst COOKIE_EXPIRY = 30; // 1 month\n\n/**\n * Abstract class for parsing localization\n */\nexport abstract class LocalizeParser {\n  locales: Array<string>;\n  currentLang: string;\n  routes: Routes;\n  defaultLang: string;\n\n  protected prefix: string;\n\n  private _translationObject: any;\n  private _wildcardRoute: Route;\n  private _languageRoute: Route;\n\n\n  constructor(@Inject(TranslateService) private translate: TranslateService,\n              @Inject(Location) private location: Location,\n              @Inject(LocalizeRouterSettings) private settings: LocalizeRouterSettings) {\n  }\n\n\n  abstract load(routes: Routes): Promise<any>;\n\n\n  protected init(routes: Routes): Promise<any> {\n    this.routes = routes;\n\n    if (!this.locales || !this.locales.length) {\n      return Promise.resolve();\n    }\n    /** detect current language */\n    const locationLang = this.getLocationLang();\n    const browserLang = this._getBrowserLang();\n\n    if (this.settings.defaultLangFunction) {\n      this.defaultLang = this.settings.defaultLangFunction(this.locales, this._cachedLang, browserLang);\n    } else {\n      this.defaultLang = this._cachedLang || browserLang || this.locales[0];\n    }\n    const selectedLanguage = locationLang || this.defaultLang;\n    this.translate.setDefaultLang(this.defaultLang);\n\n    let children: Routes = [];\n    /** if set prefix is enforced */\n    if (this.settings.alwaysSetPrefix) {\n      const baseRoute = { path: '', redirectTo: this.defaultLang, pathMatch: 'full' };\n\n      /** extract potential wildcard route */\n      const wildcardIndex = routes.findIndex((route: Route) => route.path === '**');\n      if (wildcardIndex !== -1) {\n        this._wildcardRoute = routes.splice(wildcardIndex, 1)[0];\n      }\n      children = this.routes.splice(0, this.routes.length, baseRoute);\n    } else {\n      children = this.routes.splice(0, this.routes.length);\n    }\n\n    /** exclude certain routes */\n    for (let i = children.length - 1; i >= 0; i--) {\n      if (children[i].data && children[i].data['skipRouteLocalization']) {\n        this.routes.push(children[i]);\n        children.splice(i, 1);\n      }\n    }\n\n    /** append children routes */\n    if (children && children.length) {\n      if (this.locales.length > 1 || this.settings.alwaysSetPrefix) {\n        this._languageRoute = { children: children };\n        this.routes.unshift(this._languageRoute);\n      } else {\n        this.routes.unshift(...children);\n      }\n    }\n\n    /** ...and potential wildcard route */\n    if (this._wildcardRoute && this.settings.alwaysSetPrefix) {\n      this.routes.push(this._wildcardRoute);\n    }\n\n    /** translate routes */\n    return this.translateRoutes(selectedLanguage).toPromise();\n  }\n\n  initChildRoutes(routes: Routes) {\n    this._translateRouteTree(routes);\n    return routes;\n  }\n\n  mutateRouterRootRoute(currentLanguage: string, previousLanguage: string, routes: Routes) {\n    const previousTranslatedLanguage = this.settings.alwaysSetPrefix || previousLanguage !== this.defaultLang ?\n      previousLanguage : '';\n    const currentTranslatedLanguage = this.settings.alwaysSetPrefix || currentLanguage !== this.defaultLang ?\n      currentLanguage : '';\n    const baseRoute = routes.find(route => route.path === previousTranslatedLanguage);\n    if (baseRoute) {\n      baseRoute.path = currentTranslatedLanguage;\n    }\n  }\n\n\n  translateRoutes(language: string): Observable<any> {\n    this.setRootLanguage(language);\n\n    return this.translate.use(language)\n      .pipe(\n        map(translations => {\n          this._translationObject = translations;\n          this.currentLang = language;\n\n          if (this._languageRoute) {\n            this._translateRouteTree(this._languageRoute.children);\n\n            // if there is wildcard route\n            if (this._wildcardRoute && this._wildcardRoute.redirectTo) {\n              this._translateProperty(this._wildcardRoute, 'redirectTo', true);\n            }\n          } else {\n            this._translateRouteTree(this.routes);\n          }\n        })\n      );\n  }\n\n  private setRootLanguage(language: string) {\n    this._cachedLang = language;\n    if (this._languageRoute) {\n      this._languageRoute.path = this.settings.alwaysSetPrefix || language !== this.defaultLang ?\n        language : '';\n    }\n  }\n\n\n  private _translateRouteTree(routes: Routes): void {\n    routes.forEach((route: Route) => {\n      if (route.path && route.path !== '**') {\n        this._translateProperty(route, 'path');\n      }\n      if (route.redirectTo) {\n        this._translateProperty(route, 'redirectTo', !route.redirectTo.indexOf('/'));\n      }\n      if (route.children) {\n        this._translateRouteTree(route.children);\n      }\n      if (route.loadChildren && (<any>route)._loadedConfig) {\n        this._translateRouteTree((<any>route)._loadedConfig.routes);\n      }\n    });\n  }\n\n\n  private _translateProperty(route: Route, property: string, prefixLang?: boolean): void {\n    // set property to data if not there yet\n    const routeData: any = route.data = route.data || {};\n    if (!routeData.localizeRouter) {\n      routeData.localizeRouter = {};\n    }\n    if (!routeData.localizeRouter[property]) {\n      routeData.localizeRouter[property] = (<any>route)[property];\n    }\n\n    const result = this.translateRoute(routeData.localizeRouter[property]);\n    (<any>route)[property] = prefixLang ? `/${this.urlPrefix}${result}` : result;\n  }\n\n  get urlPrefix() {\n    return this.settings.alwaysSetPrefix || this.currentLang !== this.defaultLang ? this.currentLang : '';\n  }\n\n\n  translateRoute(path: string): string {\n    const queryParts = path.split('?');\n    if (queryParts.length > 2) {\n      throw 'There should be only one query parameter block in the URL';\n    }\n    const pathSegments = queryParts[0].split('/');\n\n    /** collect observables  */\n    return pathSegments\n      .map((part: string) => part.length ? this.translateText(part) : part)\n      .join('/') +\n      (queryParts.length > 1 ? `?${queryParts[1]}` : '');\n  }\n\n\n  getLocationLang(url?: string): string {\n    const pathSlices = (url || this.location.path() || '')\n      .split('#')[0]\n      .split('?')[0]\n      .split('/');\n    if (pathSlices.length > 1 && this.locales.indexOf(pathSlices[1]) !== -1) {\n      return pathSlices[1];\n    }\n    if (pathSlices.length && this.locales.indexOf(pathSlices[0]) !== -1) {\n      return pathSlices[0];\n    }\n    return null;\n  }\n\n\n  private _getBrowserLang(): string {\n    return this._returnIfInLocales(this.translate.getBrowserLang());\n  }\n\n  private get _cachedLang(): string {\n    if (!this.settings.useCachedLang) {\n      return;\n    }\n    if (this.settings.cacheMechanism === CacheMechanismEnum.LocalStorage) {\n      return this._cacheWithLocalStorage();\n    }\n    if (this.settings.cacheMechanism === CacheMechanismEnum.Cookie) {\n      return this._cacheWithCookies();\n    }\n  }\n\n  private set _cachedLang(value: string) {\n    if (!this.settings.useCachedLang) {\n      return;\n    }\n    if (this.settings.cacheMechanism === CacheMechanismEnum.LocalStorage) {\n      this._cacheWithLocalStorage(value);\n    }\n    if (this.settings.cacheMechanism === CacheMechanismEnum.Cookie) {\n      this._cacheWithCookies(value);\n    }\n  }\n\n  private _cacheWithLocalStorage(value?: string): string {\n    if (typeof window === 'undefined' || typeof window.localStorage === 'undefined') {\n      return;\n    }\n    try {\n      if (value) {\n        window.localStorage.setItem(this.settings.cacheName, value);\n        return;\n      }\n      return this._returnIfInLocales(window.localStorage.getItem(this.settings.cacheName));\n    } catch (e) {\n      // weird Safari issue in private mode, where LocalStorage is defined but throws error on access\n      return;\n    }\n  }\n\n  private _cacheWithCookies(value?: string): string {\n    if (typeof document === 'undefined' || typeof document.cookie === 'undefined') {\n      return;\n    }\n    try {\n      const name = encodeURIComponent(this.settings.cacheName);\n      if (value) {\n        const d: Date = new Date();\n        d.setTime(d.getTime() + COOKIE_EXPIRY * 86400000); // * days\n        document.cookie = `${name}=${encodeURIComponent(value)};expires=${d.toUTCString()}`;\n        return;\n      }\n      const regexp = new RegExp('(?:^' + name + '|;\\\\s*' + name + ')=(.*?)(?:;|$)', 'g');\n      const result = regexp.exec(document.cookie);\n      return decodeURIComponent(result[1]);\n    } catch (e) {\n      return; // should not happen but better safe than sorry\n    }\n  }\n\n  private _returnIfInLocales(value: string): string {\n    if (value && this.locales.indexOf(value) !== -1) {\n      return value;\n    }\n    return null;\n  }\n\n  private translateText(key: string): string {\n    if (!this._translationObject) {\n      return key;\n    }\n    const prefixedKey = this.prefix + key;\n    const res = this.translate.getParsedResult(this._translationObject, prefixedKey);\n    // ignore non-translated text like 'ROUTES.home'\n    if (res === prefixedKey) {\n      return key;\n    }\n    return res || key;\n  }\n}\n\n/**\n * Manually set configuration\n */\nexport class ManualParserLoader extends LocalizeParser {\n\n\n  constructor(translate: TranslateService, location: Location, settings: LocalizeRouterSettings, locales: string[] = ['en'], prefix: string = 'ROUTES.') {\n    super(translate, location, settings);\n    this.locales = locales;\n    this.prefix = prefix || '';\n  }\n\n\n  load(routes: Routes): Promise<any> {\n    return new Promise((resolve: any) => {\n      this.init(routes).then(resolve);\n    });\n  }\n}\n\nexport class DummyLocalizeParser extends LocalizeParser {\n  load(routes: Routes) {\n    return new Promise((resolve: any) => {\n      this.init(routes).then(resolve);\n    });\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport {\n  Router,\n  NavigationStart,\n  ActivatedRouteSnapshot,\n  UrlSegment,\n  PRIMARY_OUTLET,\n  NavigationExtras\n} from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { pairwise, filter, tap } from 'rxjs/operators';\nimport { LocalizeParser } from './localize-router.parser';\nimport { LocalizeRouterSettings } from './localize-router.config';\n\n/**\n * Localization service\n * modifyRoutes\n */\n@Injectable()\nexport class LocalizeRouterService {\n  routerEvents: Subject<string>;\n\n\n  constructor(\n    @Inject(LocalizeParser) public parser: LocalizeParser,\n    @Inject(LocalizeRouterSettings) public settings: LocalizeRouterSettings,\n    @Inject(Router) private router: Router\n  ) {\n    this.routerEvents = new Subject<string>();\n  }\n\n  /**\n   * Start up the service\n   */\n  init(): void {\n    this.router.resetConfig(this.parser.routes);\n    // subscribe to router events\n    this.router.events\n      .pipe(\n        filter((event) => event instanceof NavigationStart),\n        pairwise()\n      )\n      .subscribe(this._routeChanged());\n  }\n\n\n  changeLanguage(lang: string): void {\n    if (lang !== this.parser.currentLang) {\n      const rootSnapshot: ActivatedRouteSnapshot = this.router.routerState.snapshot.root;\n\n      this.parser\n        .translateRoutes(lang)\n        .pipe(\n          // set new routes to router\n          tap(() => this.router.resetConfig(this.parser.routes))\n        )\n        .subscribe(() => {\n          const urlSegments = this.traverseSnapshot(rootSnapshot, true).filter((path: string, i: number) => {\n            return !i || path; // filter out empty paths\n          });\n\n          const navigationExtras: NavigationExtras = {\n            ...(rootSnapshot.queryParamMap.keys.length ? { queryParams: rootSnapshot.queryParams } : {}),\n            ...(rootSnapshot.fragment ? { fragment: rootSnapshot.fragment } : {})\n          };\n\n          // use navigate to keep extras unchanged\n          this.router.navigate(urlSegments, navigationExtras);\n        });\n    }\n  }\n\n  private traverseSnapshot(snapshot: ActivatedRouteSnapshot, isRoot: boolean = false): any[] {\n    if (isRoot) {\n      if (!snapshot.firstChild) {\n        return [''];\n      }\n      if (this.settings.alwaysSetPrefix || this.parser.currentLang !== this.parser.defaultLang) {\n        return [`/${this.parser.currentLang}`, ...this.traverseSnapshot(snapshot.firstChild.firstChild)];\n      } else {\n        return [...this.traverseSnapshot(snapshot.firstChild.firstChild)];\n      }\n    }\n\n    const urlPart = this.parseSegmentValue(snapshot);\n\n    const outletChildren = snapshot.children.filter((child) => child.outlet !== PRIMARY_OUTLET);\n\n    const outlets = outletChildren.reduce(\n      (acc, cur) => ({\n        outlets: {\n          ...acc.outlets,\n          [cur.outlet]: this.parseSegmentValue(cur)\n        }\n      }),\n      { outlets: {} }\n    );\n\n    const primaryChild = snapshot.children.find((child) => child.outlet === PRIMARY_OUTLET);\n\n    return [\n      urlPart,\n      ...(Object.keys(snapshot.params).length ? [snapshot.params] : []),\n      ...(outletChildren.length ? [outlets] : []),\n      ...(primaryChild ? this.traverseSnapshot(primaryChild) : [])\n    ];\n  }\n\n  private parseSegmentValue(snapshot: ActivatedRouteSnapshot): string {\n    if (snapshot.routeConfig) {\n      if (snapshot.routeConfig.path === '**') {\n        return this.parser.translateRoute(\n          snapshot.url\n            .filter((segment: UrlSegment) => segment.path)\n            .map((segment: UrlSegment) => segment.path)\n            .join('/')\n        );\n      } else if (snapshot.routeConfig.data) {\n        const subPathSegments = snapshot.routeConfig.data.localizeRouter.path.split('/');\n        return subPathSegments\n          .map((s: string, i: number) => (s.indexOf(':') === 0 ? snapshot.url[i].path : this.parser.translateRoute(s)))\n          .join('/');\n      }\n    }\n    return '';\n  }\n\n\n  translateRoute(path: string | any[]): string | any[] {\n    // path is null (e.g. resetting auxiliary outlet)\n    if (!path) {\n      return path;\n    }\n    if (typeof path === 'string') {\n      const url = this.parser.translateRoute(path);\n      return !path.indexOf('/') ? `/${this.parser.urlPrefix}${url}` : url;\n    }\n    // it's an array\n    let result: any[] = [];\n    (path as Array<any>).forEach((segment: any, index: number) => {\n      if (typeof segment === 'string') {\n        const res = this.parser.translateRoute(segment);\n        if (!index && !segment.indexOf('/')) {\n          result.push(`/${this.parser.urlPrefix}${res}`);\n        } else {\n          result.push(res);\n        }\n      } else {\n        // translate router outlets block\n        if (segment && segment.outlets) {\n          let outlets: any = {};\n          for (let key in segment.outlets) {\n            if (segment.outlets.hasOwnProperty(key)) {\n              outlets[key] = this.translateRoute(segment.outlets[key]);\n            }\n          }\n          result.push({ ...segment, outlets: outlets });\n        } else {\n          result.push(segment);\n        }\n      }\n    });\n    return result;\n  }\n\n\n  private _routeChanged(): (eventPair: [NavigationStart, NavigationStart]) => void {\n    return ([previousEvent, currentEvent]: [NavigationStart, NavigationStart]) => {\n      const previousLang = this.parser.getLocationLang(previousEvent.url) || this.parser.defaultLang;\n      const currentLang = this.parser.getLocationLang(currentEvent.url) || this.parser.defaultLang;\n\n      if (currentLang !== previousLang) {\n        // mutate router config directly to avoid getting out of sync\n        this.parser.mutateRouterRootRoute(currentLang, previousLang, this.router.config);\n        this.parser\n          .translateRoutes(currentLang)\n          .pipe(\n            // reset routes again once they are all translated\n            tap(() => this.router.resetConfig(this.parser.routes))\n          )\n          .subscribe(() => {\n            // Fire route change event\n            this.routerEvents.next(currentLang);\n          });\n      }\n    };\n  }\n}\n","\nexport function equals(o1: any, o2: any): boolean {\n  if (o1 === o2) {\n    return true;\n  }\n  if (o1 === null || o2 === null) {\n    return false;\n  }\n  if(o1 !== o1 && o2 !== o2) {\n    return true; // NaN === NaN\n  }\n  let t1 = typeof o1,\n    t2 = typeof o2,\n    length: number,\n    key: any,\n    keySet: any;\n\n  if(t1 === t2 && t1 === 'object') {\n    if(Array.isArray(o1)) {\n      if (!Array.isArray(o2)) {\n        return false;\n      }\n      if((length = o1.length) === o2.length) {\n        for(key = 0; key < length; key++) {\n          if(!equals(o1[key], o2[key])) {\n            return false;\n          }\n        }\n        return true;\n      }\n    } else {\n      if (Array.isArray(o2)) {\n        return false;\n      }\n      keySet = Object.create(null);\n      for (key in o1) {\n        if (o1.hasOwnProperty(key)) {\n          if (!equals(o1[key], o2[key])) {\n            return false;\n          }\n          keySet[key] = true;\n        }\n      }\n      for (key in o2) {\n        if (o2.hasOwnProperty(key)) {\n          if (!(key in keySet) && typeof o2[key] !== 'undefined') {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n  }\n  return false;\n}\n","import { PipeTransform, Pipe, ChangeDetectorRef, OnDestroy } from '@angular/core';\nimport { LocalizeRouterService } from './localize-router.service';\nimport { Subscription } from 'rxjs';\nimport { equals } from './util';\n\nconst VIEW_DESTROYED_STATE = 128;\n\n@Pipe({\n  name: 'localize',\n  pure: false // required to update the value when the promise is resolved\n})\nexport class LocalizeRouterPipe implements PipeTransform, OnDestroy {\n  private value: string | any[] = '';\n  private lastKey: string | any[];\n  private lastLanguage: string;\n  private subscription: Subscription;\n\n\n  constructor(private localize: LocalizeRouterService, private _ref: ChangeDetectorRef) {\n    this.subscription = this.localize.routerEvents.subscribe(() => {\n      this.transform(this.lastKey);\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n\n  transform(query: string | any[]): string | any[] {\n    if (!query || query.length === 0 || !this.localize.parser.currentLang) {\n      return query;\n    }\n    if (equals(query, this.lastKey) && equals(this.lastLanguage, this.localize.parser.currentLang)) {\n      return this.value;\n    }\n    this.lastKey = query;\n    this.lastLanguage = this.localize.parser.currentLang;\n\n    /** translate key and update values */\n    this.value = this.localize.translateRoute(query);\n    this.lastKey = query;\n    // if view is already destroyed, ignore firing change detection\n    if ((<any> this._ref)._view.state & VIEW_DESTROYED_STATE) {\n      return this.value;\n    }\n    this._ref.detectChanges();\n    return this.value;\n  }\n}\n","import { ROUTES } from '@angular/router';\nimport {\n  SystemJsNgModuleLoader, NgModuleFactory, Injector,\n  SystemJsNgModuleLoaderConfig, Optional, Compiler, Injectable, Inject, forwardRef\n} from '@angular/core';\nimport { LocalizeParser } from './localize-router.parser';\n\n/**\n * Extension of SystemJsNgModuleLoader to enable localization of route on lazy load\n */\n@Injectable()\nexport class LocalizeRouterConfigLoader extends SystemJsNgModuleLoader {\n\n  constructor(@Inject(forwardRef(() => LocalizeParser)) private localize: LocalizeParser,\n              _compiler: Compiler,\n              @Optional() config?: SystemJsNgModuleLoaderConfig) {\n    super(_compiler, config);\n  }\n\n\n  load(path: string): Promise<NgModuleFactory<any>> {\n    return super.load(path).then((factory: NgModuleFactory<any>) => {\n      return {\n        moduleType: factory.moduleType,\n        create: (parentInjector: Injector) => {\n          const module = factory.create(parentInjector);\n          const getMethod = module.injector.get.bind(module.injector);\n\n          module.injector['get'] = (token: any, notFoundValue: any) => {\n            const getResult = getMethod(token, notFoundValue);\n\n            if (token === ROUTES) {\n              // translate lazy routes\n              return this.localize.initChildRoutes([].concat(...getResult));\n            } else {\n              return getResult;\n            }\n          };\n          return module;\n        }\n      };\n    });\n  }\n}\n","import {\n  NgModule, ModuleWithProviders, APP_INITIALIZER, Optional, SkipSelf,\n  Injectable, Injector, NgModuleFactoryLoader\n} from '@angular/core';\nimport { LocalizeRouterService } from './localize-router.service';\nimport { DummyLocalizeParser, LocalizeParser } from './localize-router.parser';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LocalizeRouterPipe } from './localize-router.pipe';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  ALWAYS_SET_PREFIX,\n  CACHE_MECHANISM, CACHE_NAME, DEFAULT_LANG_FUNCTION, LOCALIZE_ROUTER_FORROOT_GUARD, LocalizeRouterConfig, LocalizeRouterSettings,\n  RAW_ROUTES,\n  USE_CACHED_LANG\n} from './localize-router.config';\nimport { LocalizeRouterConfigLoader } from './localize-router-config-loader';\n\n@Injectable()\nexport class ParserInitializer {\n  parser: LocalizeParser;\n  routes: Routes;\n\n\n  constructor(private injector: Injector) {\n  }\n\n\n  appInitializer(): Promise<any> {\n    const res = this.parser.load(this.routes);\n    res.then(() => {\n      const localize: LocalizeRouterService = this.injector.get(LocalizeRouterService);\n      localize.init();\n    });\n\n    return res;\n  }\n\n\n  generateInitializer(parser: LocalizeParser, routes: Routes[]): () => Promise<any> {\n    this.parser = parser;\n    this.routes = routes.reduce((a, b) => a.concat(b));\n    return this.appInitializer;\n  }\n}\n\n\nexport function getAppInitializer(p: ParserInitializer, parser: LocalizeParser, routes: Routes[]): any {\n  return p.generateInitializer(parser, routes).bind(p);\n}\n\n@NgModule({\n  imports: [CommonModule, RouterModule, TranslateModule],\n  declarations: [LocalizeRouterPipe],\n  exports: [LocalizeRouterPipe]\n})\nexport class LocalizeRouterModule {\n\n  static forRoot(routes: Routes, config: LocalizeRouterConfig = {}): ModuleWithProviders {\n    return {\n      ngModule: LocalizeRouterModule,\n      providers: [\n        {\n          provide: LOCALIZE_ROUTER_FORROOT_GUARD,\n          useFactory: provideForRootGuard,\n          deps: [[LocalizeRouterModule, new Optional(), new SkipSelf()]]\n        },\n        { provide: USE_CACHED_LANG, useValue: config.useCachedLang },\n        { provide: ALWAYS_SET_PREFIX, useValue: config.alwaysSetPrefix },\n        { provide: CACHE_NAME, useValue: config.cacheName },\n        { provide: CACHE_MECHANISM, useValue: config.cacheMechanism },\n        { provide: DEFAULT_LANG_FUNCTION, useValue: config.defaultLangFunction },\n        LocalizeRouterSettings,\n        config.parser || { provide: LocalizeParser, useClass: DummyLocalizeParser },\n        {\n          provide: RAW_ROUTES,\n          multi: true,\n          useValue: routes\n        },\n        LocalizeRouterService,\n        ParserInitializer,\n        { provide: NgModuleFactoryLoader, useClass: LocalizeRouterConfigLoader },\n        {\n          provide: APP_INITIALIZER,\n          multi: true,\n          useFactory: getAppInitializer,\n          deps: [ParserInitializer, LocalizeParser, RAW_ROUTES]\n        }\n      ]\n    };\n  }\n\n  static forChild(routes: Routes): ModuleWithProviders {\n    return {\n      ngModule: LocalizeRouterModule,\n      providers: [\n        {\n          provide: RAW_ROUTES,\n          multi: true,\n          useValue: routes\n        }\n      ]\n    };\n  }\n}\n\n\nexport function provideForRootGuard(localizeRouterModule: LocalizeRouterModule): string {\n  if (localizeRouterModule) {\n    throw new Error(\n      `LocalizeRouterModule.forRoot() called twice. Lazy loaded modules should use LocalizeRouterModule.forChild() instead.`);\n  }\n  return 'guarded';\n}\n"],"names":[],"mappings":"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"}